# This file was generated by running "update-rt-siteconfig".
#
# While local modifications will not be overwritten without permission,
# it is recommended the they are instead placed in 
# /etc/request-tracker4/RT_SiteConfig.d
#
# Note that modifications to the RT_SiteConfig.d directory won't 
# take effect until the update command mentioned above is run again.

# start /etc/request-tracker4/RT_SiteConfig.d/40-timezone
# dynamically find out the current timezone
my $zone = "UTC";
$zone=`/bin/cat /etc/timezone`
    if -f "/etc/timezone";
chomp $zone;
Set($Timezone, $zone);
# end   /etc/request-tracker4/RT_SiteConfig.d/40-timezone
# start /etc/request-tracker4/RT_SiteConfig.d/50-debconf
# THE BASICS:

Set($rtname, 'hcs.harvard.edu');
Set($Organization, 'hcs.harvard.edu');

Set($CorrespondAddress, 'acctserv@hcs.harvard.edu');
Set($CommentAddress, 'acctserv-comment@hcs.harvard.edu');

# THE WEBSERVER:

Set($WebPath, "/rt");
Set($WebBaseURL, "https://www.hcs.harvard.edu");
Set($WebPort, 443);
# end   /etc/request-tracker4/RT_SiteConfig.d/50-debconf
# start /etc/request-tracker4/RT_SiteConfig.d/51-dbconfig-common
# THE DATABASE:
    
Set($DatabaseType, 'mysql');

Set($DatabaseHost, 'mysql.hcs.harvard.edu');
Set($DatabasePort, '3306');

Set($DatabaseUser, 'hcs_rt');
Set($DatabasePassword, '<%= @rt_database_password %>');
Set($DatabaseName, 'hcs_rt');
# end   /etc/request-tracker4/RT_SiteConfig.d/51-dbconfig-common
# start /etc/request-tracker4/RT_SiteConfig.d/52-ldap
####### LDAP ########
Set( @Plugins, qw(RT::Authen::ExternalAuth) );

# The order in which the services defined in ExternalSettings
# should be used to authenticate users. User is authenticated
# if successfully confirmed by any service - no more services
# are checked.
Set($ExternalAuthPriority, ['HCS_LDAP']);

# The order in which the services defined in ExternalSettings
# should be used to get information about users. This includes
# RealName, Tel numbers etc, but also whether or not the user
# should be considered disabled.
# Once user info is found, no more services are checked.
Set($ExternalInfoPriority, ['HCS_LDAP']);

# If this is set to true, then the relevant packages will
# be loaded to use SSL/TLS connections. At the moment,
# this just means "use Net::SSLeay;"
Set($ExternalServiceUsesSSLorTLS, 0);

# If this is set to 1, then users should be autocreated by RT
# as internal users if they fail to authenticate from an
# external service.
Set($AutoCreateNonExternalUsers, 1);

# These are the full settings for each external service as a HashOfHashes
# Note that you may have as many external services as you wish. They will
# be checked in the order specified in the Priority directives above.
# e.g.
#   Set(ExternalAuthPriority,['My_LDAP','My_MySQL','My_Oracle','SecondaryLDAP','Other-DB']);
#
Set($ExternalSettings,      {
    'HCS_LDAP'       =>  {   ## GENERIC SECTION
                            # The type of service (db/ldap/cookie)
                            'type'                      =>  'ldap',
                            # Should the service be used for authentication?
                            'auth'                      =>  1,
                            # Should the service be used for information?
                            'info'                      =>  1,
                            # The server hosting the service
                            'server'                    =>  'hcs.harvard.edu',
                            ## SERVICE-SPECIFIC SECTION
                            # If you can bind to your LDAP server anonymously you should
                            # remove the user and pass config lines, otherwise specify them here:
                            #
                            # The username RT should use to connect to the LDAP server
                            #'user'                       =>  'cn=Directory Manager',
                            # The password RT should use to connect to the LDAP server
                            #'pass'                       =>  '',
                            #
                            # The LDAP search base
                            'base'                      =>  'ou=People,dc=hcs,dc=harvard,dc=edu',
                            # The filter to use to match RT-Users
                            'filter'                    =>  '(objectClass=posixAccount)',
                            # The filter that will only match disabled users
                            'd_filter'                  =>  '(employmentStatus=Terminated)',
                            # Should we try to use TLS to encrypt connections?
                            'tls'                       =>  0,
                            # What other args should I pass to Net::LDAP->new($host,@args)?
                            'net_ldap_args'             => [    version =>  3   ],
                            # Does authentication depend on group membership? What group name?
                            'group'                     =>  'cn=acctserfs,ou=Group,dc=hcs,dc=harvard,dc=edu',
                            # What is the attribute for the group object that determines membership?
                            'group_attr'                =>  'memberUid',
                            # What is the attribute of the user entry that should be matched against
                            # group_attr above?
                            'group_attr_value'          =>  'uid',
                            ## RT ATTRIBUTE MATCHING SECTION
                            # The list of RT attributes that uniquely identify a user
                            'attr_match_list'           => [    'ExternalContactInfoId',
                                                                'Name',
                                                                'RealName'
                                                            ],
                            # The mapping of RT attributes on to LDAP attributes
                            'attr_map'                  =>  {   'Name' => 'uid',
                                                                'EmailAddress' => 'mail',
                                                                'Organization' => 'o',
                                                                'RealName' => 'cn',
                                                                'ExternalContactInfoId' => 'dn',
                                                                'ExternalAuthId' => 'uid',
                                                                'Gecos' => 'gecos'
                                                            }
                        }
                    }
);

# end   /etc/request-tracker4/RT_SiteConfig.d/52-ldap
# start /etc/request-tracker4/RT_SiteConfig.d/99-other
# OTHER SETTINGS:

Set($FriendlyFromLineFormat, "\"%s from HCS\" <%%s>");

# LOGGING:

Set($LogDir, "/var/log/request-tracker4");
Set($LogToFileNamed, "rt.log");
Set($LogToFile, 'info');

# end   /etc/request-tracker4/RT_SiteConfig.d/99-other
1;
