#!/usr/bin/python
import sys
from subprocess import call
from acctutils.models import Group
from hcs import passwords
from optparse import OptionParser

def main():
    parser = OptionParser("usage: %prog [options] group")
    parser.add_option("-a", "--add", dest="auser", action="append",
                      help="add a user to a group")
    parser.add_option("-r", "--remove", action="append",
                      dest="ruser", help="remove a user from a group")
    parser.add_option("-f", "--force", action="store_true",
                      help="run without asking for confirmation")
    
    (options, args) = parser.parse_args()
    if not len(args) == 1:
        parser.error("incorrect number of arguments")
    
    # Check if root
    try:
        passwords.get('ldap')
    except passwords.PasswordNotFound:
        parser.error("you must run this script as root")
    
    group = args[0]
    g = Group.find_by_name(group)
    orig_members = list(g.members)
    g.members += options.auser or []
    # Todo: make this more efficient?
    for m in options.ruser or []:
        g.members.remove(m)
    
    save_group = False
    if not options.force:
        print 'Original: %s' % ','.join(orig_members)
        print 'New: %s' % ','.join(g.members)
        if confirm('Do you want to save your changes?'):
            save_group = True
    else:
        save_group = True
        
    if save_group:
        g.save()
        call(['nscd', '-i', 'group'])

def confirm(prompt=None, resp=False):
    """http://code.activestate.com/recipes/541096/

    prompts for yes or no response from the user. Returns True for yes and
    False for no.

    'resp' should be set to the default value assumed by the caller when
    user simply types ENTER.

    >>> confirm(prompt='Create Directory?', resp=True)
    Create Directory? [y]|n: 
    True
    >>> confirm(prompt='Create Directory?', resp=False)
    Create Directory? [n]|y: 
    False
    >>> confirm(prompt='Create Directory?', resp=False)
    Create Directory? [n]|y: y
    True

    """
    
    if prompt is None:
        prompt = 'Confirm'

    if resp:
        prompt = '%s [%s]|%s: ' % (prompt, 'y', 'n')
    else:
        prompt = '%s [%s]|%s: ' % (prompt, 'n', 'y')
        
    while True:
        ans = raw_input(prompt)
        if not ans:
            return resp
        if ans not in ['y', 'Y', 'n', 'N']:
            print 'please enter y or n.'
            continue
        if ans == 'y' or ans == 'Y':
            return True
        if ans == 'n' or ans == 'N':
            return False


if __name__ == '__main__':
    sys.exit(main())
