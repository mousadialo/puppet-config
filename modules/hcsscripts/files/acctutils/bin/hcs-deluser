#!/usr/bin/python
import optparse
import sys
from subprocess import call, Popen, PIPE

from acctutils.models import User, Group
from acctutils.custom_exceptions import ObjectNotFound
from zfsquota.quotaclient import QuotaClient

VERSION = '0.4'

def destroy_filesystem(home_prefix, uname):
    c = QuotaClient(uname, home_prefix)
    return c.destroy_filesystem()

def rm_from_group(uname, group):
    g = Group.find_by_name(group)
    g.members.remove(uname)
    g.save()

def remove_from_groups(uname, verbose=False):
    p = Popen(['groups', uname], stdout=PIPE)
    groups = p.communicate()[0].split()[2:]

    if verbose:
        print "Removing from LDAP groups:", groups
    for g in groups:
        rm_from_group(uname, g)

def delete_user(uname):
    u = User.find_by_username(uname)
    return u.delete()

def make_backup(dest, chdir, username, verbose=True):
    cmd = ['tar', '-czf', dest, '-C', chdir, username]
    r = call(cmd)
    if r != 0:
        print "Command '%s' returned exit status %d." % (' '.join(cmd), r)
    return r


def main(username, backup=True, remove_home=True, remove_user=True,
         home_prefix=None):

    u = None
    # get home prefix from LDAP if not specified
    if home_prefix is None:
        try:
            u = User.find_by_username(username)
        except ObjectNotFound:
            print "Error: The user '%s' does not exist." % username
            return 2

        try:
            home_prefix = u.home.split('/')[2]
        except IndexError:
            print "Error: Homedir '%s' is of an unexpected form." % u.home
            return 11

    if backup:
        # make a backup of the home directory
        print 'Backing up home directory to %s.tgz...' % username
        r = make_backup(username+'.tgz', '/home/'+home_prefix, username)
        if r != 0:
            return r

    if remove_home:
        # delete home directory
        print "Removing home directory's filesystem. This may take a while..."
        destroy_filesystem(home_prefix, username)

    if remove_user:
        # delete group memberships
        remove_from_groups(username, verbose=True)
        # delete user from LDAP
        print 'Removing user from LDAP...'
        delete_user(username)

    print 'Done.'


if __name__ == '__main__':
    p = optparse.OptionParser(usage='%prog [options] USER',
                              version='%prog ' + VERSION)
    p.add_option('--no-backup', dest='backup', action='store_false',
                 help="don't back up the user's home directory", default='True')
    p.add_option('--no-remove-home', dest='remove_home', action='store_false',
                 help="don't remove the user's home directory", default='True')
    p.add_option('--no-remove-user', dest='remove_user', action='store_false',
                 help="don't remove the user from LDAP", default='True')

    g = optparse.OptionGroup(p, 'Advanced Options')
    g.add_option('--home-prefix', metavar='PREFIX',
                 help="specify a home directory prefix (e.g. 'groups')")
    p.add_option_group(g)

    opts, args = p.parse_args()
    if len(args) != 1:
        p.error('incorrect number of arguments')
    username = args[0]

    sys.exit(main(username, **vars(opts)))

